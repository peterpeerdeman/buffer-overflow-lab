use std::io::{BufRead, BufReader, Write};
use std::net::TcpStream;
use std::str;

pub fn interact(mut stream: TcpStream) -> TcpStream {

    let length: u32 = 5;
    let message = "hello";
    stream
        .write(&length.to_le_bytes())
        .expect("Failed to write to server");

    stream
        .write(&message.as_bytes())
        .expect("Failed to write to server");

    let mut reader = BufReader::new(&stream);
    let mut buffer: Vec<u8> = Vec::new();
    reader
        .read_until(b'\n', &mut buffer)
        .expect("Could not read into buffer");
    print!(
        "{}",
        str::from_utf8(&buffer).expect("Could not write buffer as string")
    );
    stream
}

